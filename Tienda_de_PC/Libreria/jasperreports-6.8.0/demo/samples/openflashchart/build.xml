<project name="openflashchart" default="javac" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">

	<description>Shows how Open Flash Charts could be included in HTML and PDF reports using a specially designed component.</description>

	<property name="sample.dir" value="openflashchart"/>
	<property name="class.name" value="OFCApp" />
	<property name="base.file.name" value="OpenFlashChartReport" />
	<property name="file.name" value="${basedir}/build/reports/${base.file.name}" />
	
	<path id="project-classpath">
		<path refid="project-lib"/>
		<pathelement location="../../../build/classes"/>
	</path>
	
	<path id="sample-classpath">
		<pathelement location="./build/classes"/>
		<pathelement location="./build/component"/>
		<pathelement location="../../../ext/fonts"/>
		<path refid="project-classpath"/>
	</path>

	<target name="prepare-compile-classpath">
		<ant dir="../../../" target="compile"/>
		<ivy:configure file="../../../ivysettings.xml" override="true"/>
		<ivy:resolve file="./ivy.xml" log="download-only" conf="compile"/> 
		<ivy:cachepath pathid="project-lib"/> 
	</target>

	<target name="prepare-test-classpath">
		<ant dir="../../../" target="compile"/>
		<ivy:configure file="../../../ivysettings.xml" override="true"/>
		<ivy:resolve file="./ivy.xml" log="download-only" conf="test"/> 
		<ivy:cachepath pathid="project-lib"/> 
	</target>

	<target name="javac" description="Compiles the java source files of the test application." depends="prepare-compile-classpath">
		<mkdir dir="./build/classes"/> 
		<javac srcdir="." destdir="./build/classes" debug="true" optimize="false" target="1.8" source="1.8"
				encoding="UTF-8" includeantruntime="false">
			<classpath refid="sample-classpath"/>
			<compilerarg value="-Xlint:-unchecked"/>
			<compilerarg value="-Xlint:deprecation"/>
			<compilerarg value="-Xlint:-options"/>
			<include name="*.java"/>
		</javac>
		<mkdir dir="./build/component"/> 
		<javac srcdir="./src" destdir="./build/component" debug="true" optimize="false" target="1.8" source="1.8"
				encoding="UTF-8" includeantruntime="false">
			<classpath refid="sample-classpath"/>
			<compilerarg value="-Xlint:-unchecked"/>
			<compilerarg value="-Xlint:deprecation"/>
			<compilerarg value="-Xlint:-options"/>
		</javac>
		<copy todir="./build/component">
			<fileset dir="./src">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
	</target>
	
	<target name="jar" description="Packs the component classes and resources into a jar" depends="javac">
		<jar jarfile="./build/jasperreports-ofc.jar">
			<manifest>
				<attribute name="Built-By" value="Jaspersoft"/>
			</manifest>		
			<fileset dir="./build/component"/>
		</jar>
	</target>

	<target name="compile" description="Compiles the XML report design and produces the .jasper file." depends="prepare-compile-classpath">
		<mkdir dir="./build/reports"/> 
		<taskdef name="jrc" classname="net.sf.jasperreports.ant.JRAntCompileTask"> 
			<classpath refid="project-classpath"/>
		</taskdef>
		<jrc destdir="./build/reports">
			<src>
				<fileset dir=".">
					<include name="*.jrxml"/>
				</fileset>
			</src>
			<classpath refid="sample-classpath"/>
		</jrc> 
	</target>

	<target name="fill" description="Fills the compiled report design with data and produces the .jrprint file." depends="prepare-test-classpath">
		<java classname="${class.name}" fork="true">
			<arg value="fill"/>
			<arg value="${file.name}.jasper"/>
			<classpath refid="sample-classpath"/>
		</java>
	</target>

	<target name="view" description="Launches the report viewer to preview the report stored in the .jrprint file." depends="prepare-test-classpath">
		<java classname="net.sf.jasperreports.view.JasperViewer" fork="true">
			<arg value="${file.name}.jrprint"/>
			<classpath refid="sample-classpath"/>
		</java>
	</target>

	<target name="viewXml" description="Launches the report viewer to preview the generated report stored in an XML file." depends="prepare-test-classpath">
		<java classname="net.sf.jasperreports.view.JasperViewer" fork="true">
			<arg value="${file.name}.jrpxml"/>
			<classpath refid="sample-classpath"/>
		</java>
	</target>

	<target name="print" description="Sends the report in the .jrprint file to the printer." depends="prepare-test-classpath">
		<java classname="${class.name}" fork="true">
			<arg value="print"/>
			<arg value="${file.name}.jrprint"/>
			<classpath refid="sample-classpath"/>
		</java>
	</target>

	<target name="pdf" description="Generates an PDF  version of the report by converting the .jrprint file." depends="prepare-test-classpath">
		<java classname="${class.name}" fork="true">
			<arg value="pdf"/>
			<arg value="${file.name}.jrprint"/>
			<classpath refid="sample-classpath"/>
		</java>
	</target>

	<target name="xml" description="Generates an XML version of the report by converting the .jrprint file." depends="prepare-test-classpath">
		<java classname="${class.name}" fork="true">
			<arg value="xml"/>
			<arg value="${file.name}.jrprint"/>
			<classpath refid="sample-classpath"/>
		</java>
	</target>

	<target name="xmlEmbed" description="Generates an XML version of the report by converting the .jrprint file." depends="prepare-test-classpath">
		<java classname="${class.name}" fork="true">
			<arg value="xmlEmbed"/>
			<arg value="${file.name}.jrprint"/>
			<classpath refid="sample-classpath"/>
		</java>
	</target>

	<target name="html" description="Generates an HTML version of the report by converting the .jrprint file." depends="prepare-test-classpath">
		<java classname="${class.name}" fork="true">
			<arg value="html"/>
			<arg value="${file.name}.jrprint"/>
			<classpath refid="sample-classpath"/>
		</java>
	</target>

	<target name="rtf" description="Generates an RTF version of the report by converting the .jrprint file." depends="prepare-test-classpath">
		<java classname="${class.name}" fork="true">
			<arg value="rtf"/>
			<arg value="${file.name}.jrprint"/>
			<classpath refid="sample-classpath"/>
		</java>
	</target>

	<target name="xls" description="Generates an XLS version of the report by converting the .jrprint file using the POI library." depends="prepare-test-classpath">
		<java classname="${class.name}" fork="true">
			<arg value="xls"/>
			<arg value="${file.name}.jrprint"/>
			<classpath refid="sample-classpath"/>
		</java>
	</target>

	<target name="csv" description="Generates a CSV version of the report by converting the .jrprint file." depends="prepare-test-classpath">
		<java classname="${class.name}" fork="true">
			<arg value="csv"/>
			<arg value="${file.name}.jrprint"/>
			<classpath refid="sample-classpath"/>
		</java>
	</target>

	<target name="odt" description="Generates an ODT version of the report by converting the .jrprint file." depends="prepare-test-classpath">
		<java classname="${class.name}" fork="true">
			<arg value="odt"/>
			<arg value="${file.name}.jrprint"/>
			<classpath refid="sample-classpath"/>
		</java>
	</target>

	<target name="ods" description="Generates an ODS version of the report by converting the .jrprint file." depends="prepare-test-classpath">
		<java classname="${class.name}" fork="true">
			<arg value="ods"/>
			<arg value="${file.name}.jrprint"/>
			<classpath refid="sample-classpath"/>
		</java>
	</target>

	<target name="docx" description="Generates a DOCX version of the report by converting the .jrprint file." depends="prepare-test-classpath">
		<java classname="${class.name}" fork="true">
			<arg value="docx"/>
			<arg value="${file.name}.jrprint"/>
			<classpath refid="sample-classpath"/>
		</java>
	</target>

	<target name="xlsx" description="Generates an XLSX version of the report by converting the .jrprint file." depends="prepare-test-classpath">
		<java classname="${class.name}" fork="true">
			<arg value="xlsx"/>
			<arg value="${file.name}.jrprint"/>
			<classpath refid="sample-classpath"/>
		</java>
	</target>

	<target name="pptx" description="Generates a PPTX version of the report by converting the .jrprint file." depends="prepare-test-classpath">
		<java classname="${class.name}" fork="true">
			<arg value="pptx"/>
			<arg value="${file.name}.jrprint"/>
			<classpath refid="sample-classpath"/>
		</java>
	</target>

	<target name="xml4swf" description="Generates an Xml4Swf version of the report by converting the .jrprint file." depends="prepare-test-classpath">
		<java classname="${class.name}" fork="true">
			<arg value="xml4swf"/>
			<arg value="${file.name}.jrprint"/>
			<classpath refid="sample-classpath"/>
		</java>
	</target>

	<target name="decompile" description="Decompiles a .jasper file into a .jrxml file." depends="prepare-compile-classpath">
		<mkdir dir="./build/reports"/> 
		<taskdef name="jrdc" classname="net.sf.jasperreports.ant.JRAntDecompileTask"> 
			<classpath refid="project-classpath"/>
		</taskdef>
		<jrdc destdir="./build/reports">
			<src>
				<fileset dir="./build/reports">
					<include name="**/*.jasper"/>
				</fileset>
			</src>
			<classpath refid="sample-classpath"/>
		</jrdc> 
	</target>
	
	<target name="prepare-jetty-classpath">
		<ivy:configure file="../../../ivysettings.xml" override="true"/>
		<ivy:resolve file="../ivy-jetty.xml" log="download-only" conf="test"/> 
		<ivy:cachepath pathid="jetty.plugin.classpath"/> 
	</target>

	<target name="jetty.run" depends="prepare-jetty-classpath">
		<mkdir dir="./build/webapp"/>
		<copy todir="./build/webapp">
			<fileset dir="./web"/>
			<fileset dir="./build/reports">
				<include name="*.html"/>
				<include name="*.html_files/*"/>
			</fileset>
		</copy>
		<taskdef classpathref="jetty.plugin.classpath" resource="tasks.properties" loaderref="jetty.loader" />
		<typedef name="connector" classname="org.eclipse.jetty.ant.types.Connector"
			classpathref="jetty.plugin.classpath" loaderref="jetty.loader" />
		<typedef name="webApp" classname="org.eclipse.jetty.ant.AntWebAppContext"
			classpathref="jetty.plugin.classpath" loaderref="jetty.loader" />
		<jetty.run daemon="true">
			<webApp war="./build/webapp" contextPath="/"/>
			<connectors>
				<connector port="8080"/>
			</connectors>
		</jetty.run>
	</target>

	<target name="viewHtml" description="Displays the HTML reports by starting an embedded web server and launching a browser." depends="prepare-test-classpath">
		<antcall target="jetty.run"/>
		<java classname="${class.name}" fork="true">
			<arg value="viewHtml"/>
			<classpath refid="sample-classpath"/>
		</java>
		<echo></echo>
		<input>Press the Return key to stop the Jetty web server and exit Ant the process...</input>
	</target>

	<target name="viewDesignXml" description="Launches the design viewer to preview the XML report design." depends="prepare-compile-classpath">
		<java classname="net.sf.jasperreports.view.JasperDesignViewer" fork="true">
			<arg value="./${base.file.name}.jrxml"/>
			<classpath refid="sample-classpath"/>
		</java>
	</target>

	<target name="viewDesign" description="Launches the design viewer to preview the compiled report design." depends="prepare-compile-classpath">
		<java classname="net.sf.jasperreports.view.JasperDesignViewer" fork="true">
			<arg value="${file.name}.jasper"/>
			<classpath refid="sample-classpath"/>
		</java>
	</target>

	<target name="clean" description="Deletes all the generated files.">
		<ant dir="../" target="clean-sample"/>
	</target>

	<target name="test" description="Runs the sample.">
		<echo message="==================================="/>
		<echo message=" Open Flash Chart Component Sample"/>
		<echo message="==================================="/>
		<antcall target="clean" />
		<antcall target="javac" />
		<antcall target="compile" />
		<antcall target="fill" />
		<antcall target="pdf" />
		<antcall target="xmlEmbed" />
		<antcall target="xml" />
		<antcall target="html" />
		<antcall target="rtf" />
		<antcall target="xls" />
		<antcall target="csv" />
		<antcall target="odt" />
		<antcall target="ods" />
		<antcall target="docx" />
		<antcall target="xlsx" />
		<antcall target="pptx" />
		<antcall target="xml4swf" />
	</target>
	
</project>
